(defun allmoves (owner theBoard) ;;this function returns a list of all moves for the given board state and the owner. It enforces the rule of required jumps by removing any non-jumps provided there are in fact jumps to begin with.
  (updateallpieces theBoard)
  (let ((movelist ())
        (jumplist ()))
    (dotimes (r 8)
      (dotimes (c 8)
        (let ((piece (nth c (nth r theBoard))))
          (if (eq 'piece (type-of piece))
              (if (eq owner (slot-value piece 'owner))
                  (if (piece-can-jump piece)
                      (setf jumplist (append jumplist (slot-value piece 'movelist)))
                      (setf movelist (append movelist (slot-value piece 'movelist)))
                    )
                )
            )
          )
        )
      )
    (if (eq jumplist nil) movelist jumplist)
    )
  )

                    
